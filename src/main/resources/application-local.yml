server:
  port: 8080

spring:
  profiles:
    activate:
      on-profile: develop
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  redis:
    host: localhost
    port: 6379
  h2:
    console:
      enabled: true
      path: /h2-console

  datasource:
    url: jdbc:h2:~/side-management-h2-db
    username: ENC(ULG/l9xxXuH3EiW1cNdwTg==)
    password:
    driverClassName: org.h2.Driver

  jpa:
    hibernate:
      #애플리케이션 로딩 시점에 다 드랍하고 다시 생성
      ddl-auto: create
    properties:
      hibernate:
        # show_sql: true
        format_sql: true
        use_sql_comments: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: d2ef8a5cdacf8c8485096cbc2628c907
            redirect-uri: http://localhost:8080/login/oauth/kakao
            client-authentication-method: POST
            client-secret: vhHlIzCEwLqTdJwpiyhwxaXOVYPfOjT6
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
              - gender
              - birthday
            client_name: kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id


logging.level:
  #하이버네이트가 실행하는 쿼리들이 위에 query 보기는 system.out으로 출력되고 debug는 로그로 출력
  org.hibernate.SQL: debug

jasypt:
  encryptor:
    bean: jasyptStringEncryptor
    algorithm: PBEWithMD5AndDES
    pool-size: 2
    string-output-type: base64
    key-obtention-iterations: 100000
    password-file: C:/secret-key/secret-key.txt

logging:
  config: classpath:logback-spring.xml


