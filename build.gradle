//querydsl 추가 스프링 2.6부터는 5.0 이상을 쓴다
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //querydsl 추가 시작
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //querydsl 라이브러리 추가
    //querydsl-jpa는 실제 select from 등 애플리케이션을 작성할 때 필요한 라이브러리
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    //apt는 Q클래스명을 만들어주는 라이브러리
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    //쿼리를 잘 알아보게 해준다.
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
    //jasypt 암호화 사용
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
    //logback 관련 라이브러리
    implementation group: 'com.github.maricn', name: 'logback-slack-appender', version: '1.6.1'
    /*jwt 시작*/
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    /*jwt 끝*/
    // 카카오 API 및 인증 처리 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //access token을 가져오거나 유저 정보를 가져올 때는 실제로 Oauth 서버와 통신을 해야 하기 때문에 WebClient를 사용하여 통신을 위한 WebFlux 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //gson
    implementation 'com.google.code.gson:gson:2.8.8'

    //refresh token 저장을 위한 redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    //selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.0.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.0.3'

    //json Parser
    implementation 'org.json:json:20210307'
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝
